:root {
  --bgc-page: lavender;
  --card-shadow: .25rem .25rem .25rem rgba(0,0,0,.1),
    inset .25rem .25rem .25rem rgba(255,255,255,.5);
  --card-shadow-invert: inset .25rem .25rem .25rem rgba(0,0,0,.1),
    .25rem .25rem .25rem rgba(255,255,255,.5);
  --icon-size: 30px;
  --icon-menu-size: 40px;
  --icon-check-size: 20px;
  --txt-col-1: #000;
  --txt-col-2: #444;
  --txt-col-3: #666;
  --font-size-title: 2rem;
  --card-border-rad: .75rem;
  --card-open-transition: 250ms;
  --card-padding: .5rem;
  --card-drag-padding: calc(var(--font-size-title) + var(--card-padding) * 2.75);
  --hover-anim-duration: 250ms;
  --menu-width: 350px;
  --viewport-min-width: 600px;
  --deletion-delay: 2s; 
  --hover-delay: 150ms;
}

/* default values reset */
body { padding: 0; margin: 0; min-width: var(--viewport-min-width);}
ol, ul { padding: 0; margin: 0; list-style-type: none; }
h1, h2, p {margin: 0;}
h1 {
  font-size: 3rem;
  white-space: nowrap;
  overflow: hidden;
}
input[type="text"], input[type="date"] {
  padding: 0;
  margin: 0;
}
* {font-family: 'Times New Roman', Times, serif;}

input::selection {
  color: white;
  background-color: hsl(240, 80%, 70%);
}
input:not([type="checkbox"]):focus {
  outline: 4px solid rgba(46, 16, 192, .25);
  transition: 0ms;
}

/* menu */

#menu-button {
  position: absolute;
  left: 0;
  top: 0;
  z-index: 1;
  background-image: url(./media/images/icons/menu.svg);
  background-size: 100%;
  width: var(--icon-menu-size);
  height: var(--icon-menu-size);
  box-shadow: var(--card-shadow);
  background-color: #aaa;
  transition: background-color 150ms;
}
#menu-button:hover {
  cursor: pointer;
  background-color: white;
}

#menu {
  z-index: 1;
  position: absolute;
  box-sizing: border-box;
  padding: .5rem;
  top: var(--icon-menu-size);
  left: 0;
  max-height: calc(100vh - var(--icon-menu-size));
  overflow-x: hidden;
  overflow-y: auto;
  width: var(--menu-width);
  box-shadow: var(--card-shadow);
  backdrop-filter: blur(5px);
  background-color: rgba(255, 255, 255, 0.5);
  font-size: 1.75rem;
  display: none;
}
#menu.reveal { display: block; }

#menu .menu-item {
  display: grid;
  grid-template-columns: 1fr auto auto;
  align-items: center;
  height: calc(var(--icon-menu-size) * 1.25);
}

#menu .menu-item p {
  margin: .5rem 0;
  width: 200px;
  overflow: hidden;
  cursor: pointer;
}

#menu .menu-item .edit-project {
  font-size: 1.75rem;
  width: 200px;
}

.fieldset-list li {
  transition: padding 200ms, background-color 350ms;
}.fieldset-list li:hover {
  box-shadow: var(--card-shadow);
}

#screen-cover-menu {display: none;}
#screen-cover-menu.reveal {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
}

#menu .project-title {
  white-space: nowrap;
  overflow: hidden;
}

#menu .fieldset-options p {
  display: flex;
  width: 100%;
}

#menu a {
  text-decoration: none;
  color: inherit;
  width: 100%;
  height: 100%;
}

#menu .fieldset-options .menu-item.about {
  --icon-size: 50px;
  --duration: 3s;
  background-size: 700%;
  background-position: bottom left;
}
#menu.reveal .fieldset-options .menu-item.about {
  background: url(./media/images/background/github-mark.svg);
  background-size: var(--icon-size);
  animation: bg-anim var(--duration) calc(var(--duration) / 5) infinite linear,
  bg-zoom-out var(--duration) cubic-bezier(.08,.82,.17,1) forwards;
}
@keyframes bg-anim {
  to { background-position: calc(var(--icon-size) * 2) calc(var(--icon-size) * -1); }
}
@keyframes bg-zoom-out {
  from { background-size: 700%; }
  to { background-size: var(--icon-size); }
}

/* page content */

body {background-color: var(--bgc-page);}

#cards-container {
  box-sizing: border-box;
  margin: 0;
  width: 100vw;
  min-width: var(--viewport-min-width);
  height: 100vh;
  padding: .5rem;
  overflow: hidden;
  overflow-y: auto;
  scroll-behavior: smooth;
}

.project-item {
  box-sizing: border-box;
  padding: 1rem;
  margin: 1rem;
}



/* cards */

.card {
  box-sizing: border-box;
  width: 100%;
  box-shadow: var(--card-shadow);
  padding: var(--card-padding);
  display: grid;
  grid-template-columns: auto 1fr auto auto;
  grid-template-rows: repeat(6, auto);
  grid-template-areas:
    " drag  title    progress edit     "
    " ..... descr    descr    descr    "
    " ..... created  priority priority "
    " ..... due      priority priority "
    " ..... tasks    tasks    tasks    "
    " ..... add-task add-task add-task ";
  align-items: center;
  overflow: hidden;
} .card.active {
  height: auto;
  box-shadow: inset 0 0 5rem hsl(240, 70%, 90%);
} .card:not(.active):hover {
  background-color: rgba(255, 255, 255, 0.5);
}

.card:first-of-type { border-radius: var(--card-border-rad) var(--card-border-rad) 0 0; }
.card:last-of-type { border-radius: 0 0 var(--card-border-rad) var(--card-border-rad); }

.card .title {
  font-size: var(--font-size-title);
  color: var(--txt-col-1);
  cursor: pointer;
  padding-left: .5rem;
  overflow: hidden;
  white-space: nowrap;
}
.card .progress {
  grid-area: progress;
  box-sizing: border-box;
  margin-right: 1rem;
  width: var(--icon-size);
  height: var(--icon-size);
  border-radius: 50%;
  position: relative;
}.card .progress::after {
  position: absolute;
  content: "%";
  text-align: center;
  font-weight: 900;
  inset: 5px;
  border-radius: 50%;
  background-color: var(--bgc-page);
  backdrop-filter: blur(5px);
}
.card .description {
  grid-area: descr;
  font-size: 1.5rem;
  color: var(--txt-col-2);
  overflow: hidden;
  white-space: nowrap;
  width: 100%;
}
.card .date-creation {
  grid-area: created;
}
.card .date-due {
  grid-area: due;
}.card .date-due.edit-date-due {
  background: url(./media/images/icons/due.svg) no-repeat;
  background-size: contain;
  padding-left: 1.75rem;
  font-size: 1rem;
  background-color: white;
}

/*adding transparency for overflowed text*/
.card .title:not(.edit-title),
.card .description,
.card label,
.project-title,
h1{
  mask-image: linear-gradient(to left, transparent, white 50px);
}


.card .checklist {
  grid-area: tasks;
  display: grid;
}
.card .edit-priority {
  grid-area: priority;
  display: grid;
  grid-template-rows: repeat(2, 1fr);
  align-items: center;
  justify-content: center;
  text-align: center;
}
.card .edit-priority input[type="range"] {
  width: 80%;
  justify-self: center;
}

.create-task-div {
  display: flex;
  align-items: center;
  cursor: pointer;
  height: calc(var(--icon-size) * 1.4);
}
.create-task-div p {
  overflow: hidden;
  white-space: nowrap;
  width: 0%;
  transition: width var(--hover-anim-duration) ease-in-out var(--hover-delay);
}
.create-task-div:hover {
  box-shadow: var(--card-shadow);
}
.create-task-div:hover p {
  width: calc(100% - var(--icon-size) * 1.3);
}

.card-icon.create-task.create-todo {
  margin-left: 0;
}
.card.todo-add-div:hover .card-icon.create-task.create-todo {
  animation: icon-shake var(--hover-anim-duration);
}
.todo-add-div {
  box-sizing: border-box;
  display: flex;
  align-items: center;
  padding: .5rem .25rem;
  gap: .5rem;
  cursor: pointer;
}

.todo-add-div p {
  font-size: 2rem;
  font-weight: 600;
  overflow: hidden;
  width: 0rem;
  white-space: nowrap;
  transition: width var(--hover-anim-duration) ease-in-out var(--hover-delay);
}

.todo-add-div:hover p {
  width: 15rem;
}


/* card priority indicator */

.card[data-priority="low"] {
  background: linear-gradient(to right,lime, rgba(0, 128, 0, 0) 60px);
} .card[data-priority="low"].active {
  background: linear-gradient(to bottom,lime, rgba(0, 128, 0, 0) 60px);
}
.card[data-priority="middle"] {
  background: linear-gradient(to right, goldenrod, rgba(0, 128, 0, 0) 60px);
} .card[data-priority="middle"].active {
  background: linear-gradient(to bottom, goldenrod, rgba(0, 128, 0, 0) 60px);
}
.card[data-priority="high"] {
  background: linear-gradient(to right, orangered, rgba(0, 128, 0, 0) 60px);
} .card[data-priority="high"].active {
  background: linear-gradient(to bottom, orangered, rgba(0, 128, 0, 0) 60px);
}



/* card details transition */

.card .description,
.card .date-creation,
.card .date-due,
.card ul li {
  overflow: hidden;
  transition: var(--card-open-transition);
  height: 0rem;
}
.card.active .description,
.card.active .date-creation,
.card.active .date-due,
.card.active ul li {
  overflow: visible;
  height: 1.75rem;
}
/*individual settings*/
.card .description { margin-top: 0rem; margin-bottom: 0rem;}
.card.active .description { margin-top: 1rem; margin-bottom: .5rem;}
.card.active ul li { height: 2.5rem;}
.card .date-due  {margin-bottom: 0rem; }
.card.active .date-due  {margin-bottom: .5rem; }

.card ul li:nth-child(1) { transition-delay: 25ms; }
.card ul li:nth-child(2) { transition-delay: 50ms; }
.card ul li:nth-child(3) { transition-delay: 75ms; }
.card ul li:nth-child(4) { transition-delay: 100ms; }
.card ul li:nth-child(5) { transition-delay: 125ms; }
.card ul li:nth-child(6) { transition-delay: 150ms; }
.card ul li:nth-child(7) { transition-delay: 175ms; }
.card ul li:nth-child(8) { transition-delay: 200ms; }
.card ul li:nth-child(9) { transition-delay: 225ms; }
.card ul li:nth-child(10) { transition-delay: 250ms; }
.card ul li:nth-child(11) { transition-delay: 275ms; }
.card ul li:nth-child(12) { transition-delay: 300ms; }
.card ul li:nth-child(13) { transition-delay: 325ms; }
.card ul li:nth-child(14) { transition-delay: 350ms; }
.card ul li:nth-child(15) { transition-delay: 375ms; }
.card ul li:nth-child(16) { transition-delay: 400ms; }
.card ul li:nth-child(17) { transition-delay: 425ms; }
.card ul li:nth-child(18) { transition-delay: 450ms; }
.card ul li:nth-child(19) { transition-delay: 475ms; }
.card ul li:nth-child(1n+20) { transition-delay: 500ms; }



/* card icons */

.card li input[type="checkbox"] {
  position: relative;
  width: var(--icon-size);
  height: var(--icon-size);
  appearance: none;
  cursor: pointer;
}
.card li input[type="checkbox"]::before {
  position: absolute;
  content: "";
  inset: 0;
  background-color: rgba(0,0,0,.03);
  box-shadow: .1rem .1rem .1rem white,
    inset .1rem .1rem .25rem rgba(0,0,0,.1);
  border-radius: .25rem;
}
.card li input[type="checkbox"]::after {
  --check-anim-duration: 200ms;
  position: absolute;
  content: "";
  inset: -7px;
  background-color: red;
  clip-path: polygon(0 75%, 15% 60%, 15% 61%, 16% 62%, 18% 65%, 4% 78%, 1% 75%);
  animation: checkmark-backwards var(--check-anim-duration) ease-out forwards;
}
.card li input[type="checkbox"]:checked::after {
  animation: checkmark-forwards var(--check-anim-duration) ease-in forwards;
}
@keyframes checkmark-forwards {
  0% {opacity: 0;}
  1% {opacity: 1; clip-path: polygon(0 75%, 15% 60%, 15% 61%, 16% 62%, 18% 65%, 4% 78%);}
  30% {clip-path: polygon(0 75%, 15% 60%, 21% 66%, 26% 70%, 31% 76%, 9% 86%);}
  50% {clip-path: polygon(0 75%, 15% 60%, 35% 75%, 43% 81%, 49% 88%, 40% 100%);}
  100% {clip-path: polygon(0 75%, 15% 60%, 35% 75%, 85% 0, 100% 10%, 40% 100%);}
} @keyframes checkmark-backwards {
  0% {clip-path: polygon(0 75%, 15% 60%, 35% 75%, 85% 0, 100% 10%, 40% 100%);}
  50% {clip-path: polygon(0 75%, 15% 60%, 35% 75%, 43% 81%, 49% 88%, 40% 100%);}
  70% {clip-path: polygon(0 75%, 15% 60%, 21% 66%, 26% 70%, 31% 76%, 9% 86%);}
  99% {opacity: 1; clip-path: polygon(0 75%, 15% 60%, 15% 61%, 16% 62%, 18% 65%, 4% 78%);}
  100% {opacity: 0;}
}

.card label,
.card .edit-label {
  font-size: 1.25rem;
  color: var(--txt-col-2);
  background: linear-gradient(to right, transparent 0%, rgba(255, 255, 255, 0.5), transparent 100%) no-repeat;
  background-size: 100%;
  transition: background-position 500ms;
  background-position-x: -100vw;
  cursor: pointer;
  overflow: hidden;
  white-space: nowrap;
}
.card li input[type="checkbox"]:checked + label {
  text-decoration: line-through;
  color: var(--txt-col-3);
  background-position-x: 100vw;
}

.card.edit-mode .card-icon.remove-task {
  background: url(./media/images/icons/remove-task.svg) center no-repeat;
  background-size: 80%;
}

.card-icon {
  position: relative;
  width: var(--icon-size);
  height: var(--icon-size);
  cursor: pointer;
  appearance: none;
  background-size: 100%;
  background-position: center;
  background-repeat: no-repeat;
}
.card-icon::after {
  position: absolute;
  content: "";
  inset: 0;
  background-size: 100%;
  background-position: center;
}

.card-icon.icon-drag {
  cursor: ns-resize;
}

.card-icon.icon-pin::after {
  background-image: url(./media/images/icons/pin.svg);
} .card-icon.icon-pin:checked::after {
  background-image: url(./media/images/icons/pin-active.svg);
}
.card-icon.icon-edit::after {
  background-image: url(./media/images/icons/edit.svg);
} .card-icon.icon-edit:checked::after {
  background-image: url(./media/images/icons/edit-active.svg);
}
.card-icon.icon-fav::after {
  background-image: url(./media/images/icons/fav.svg);
}.card-icon.icon-fav:checked::after {
  background-image: url(./media/images/icons/fav-active.svg);
}

.card ul li {
  display: grid;
  grid-template-columns: auto 1fr auto;
  gap: .5rem;
  align-items: center;
}

.card .add-task {
  grid-area: add-task;
  /* display: grid; */
  grid-template-columns: var(--icon-size) 1fr;
  grid-template-areas: ". plus";
  overflow: hidden;
}
.card .create-task,
.create-task {
  grid-area: plus;
  background-image: url(./media/images/icons/add-task.svg);
  width: calc(var(--icon-size) * 1.1) ;
  height: calc(var(--icon-size) * 1.1) ;
  margin-left: 7px;
}
.card .create-task:hover {
  animation: icon-shake var(--hover-anim-duration);
}
@keyframes icon-spin-90 { to {rotate: 90deg;}}

.edit-buttons {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: .5rem;
}
.delete-icon {
  position: relative;
  width: var(--icon-size);
  height: var(--icon-size);
  margin-top: auto;
  margin-bottom: auto;
  align-items: center;
}.icon-trash,
.icon-trash-lid {
  position: absolute;
  transition: rotate 300ms;
}
.icon-trash { transform-origin: 100% 0%;}
.icon-trash-lid { transform-origin: 250% 0%;}
.delete-icon:hover .icon-trash { rotate: -7deg;}
.delete-icon:hover .icon-trash-lid { rotate: 7deg; }
.delete-icon:active .icon-trash { transition: rotate 2s; rotate: -18deg; }
.delete-icon:active .icon-trash-lid { transition: rotate 2s; rotate: 10deg; }

.delete-icon.deleting {
  /*item is deleted after animation ends*/
  animation: deleting var(--deletion-delay) linear;
}
.delete-icon.deleting::after,
.delete-icon.deleting::before {
  position: absolute;
  content: "⚠️Deleting...⚠️";
  font-size: 1.5rem;
  color: var(--bgc-page);
  padding: .25rem;
  box-shadow: var(--card-shadow);
  pointer-events: none;
  transform: translate(-100%, -10%);
  background-color: #444;
  animation: deleting-bg var(--deletion-delay) ease-out;
  clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);
}
.delete-icon.deleting::after {
  background-color: red;
  animation: deleting-text var(--deletion-delay) ease-out;

}

@keyframes deleting {
  to {
    filter: drop-shadow(0 0 .5rem red);
  }
}
@keyframes deleting-text {
  from {clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);}
  to {clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);}
}
@keyframes deleting-bg { /* this disappears the bar if fav cancels deletion*/
  0%, 100% {clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);}
}

.card-icon.icon-edit:hover,
.card-icon.icon-pin:hover {
  animation: icon-shake var(--hover-anim-duration);
  transform-origin: 0% 100%;
}
@keyframes icon-shake {
  0%, 100% { rotate: 0deg;}
  10% { rotate: 5deg;}
  20% { rotate: -5deg;}
  30% { rotate: 4deg;}
  40% { rotate: -4deg;}
  50% { rotate: 3deg;}
  60% { rotate: -3deg;}
  70% { rotate: 2deg;}
  80% { rotate: -2deg;}
  90% { rotate: 1deg;}
}

.card-icon.icon-fav:hover{
  animation: icon-spin-72 var(--hover-anim-duration);
  transform-origin: 50% 55%;
}
@keyframes icon-spin-72 { to {rotate: 72deg;} }

.card-icon.icon-fav.shake {
  animation: icon-fav-shake var(--hover-anim-duration);
}
@keyframes icon-fav-shake {
  0%, 100% {
    rotate: 0deg;
    filter: drop-shadow(0 0 5px goldenrod)
      brightness(150%);
  }
  10% { rotate: 10deg;}
  20% { rotate: -10deg;}
  30% { rotate: 8deg;}
  40% { rotate: -8deg;}
  50% { rotate: 6deg;}
  60% { rotate: -6deg;}
  70% { rotate: 4deg;}
  80% { rotate: -4deg;}
  90% { rotate: 2deg;}
}



/* edit mode content status */

input[type="text"], input[type="date"] {
  border-radius: .25rem;
  background-color: white;
  border: none;
  box-shadow: inset .15rem .15rem .15rem rgba(0,0,0,.25);
} input[type="text"].edit-label {
  background-color: white;
}

.card.edit-mode input[type="text"], input[type="date"] {
  cursor: text;
}

.card.edit-mode .title { display: none; }
.card .edit-title { display: none; font-weight: 600;}
.card.edit-mode .edit-title { display: block; box-sizing: border-box; }

.card.edit-mode .description { display: none; }
.card .edit-description { display: none; }
.card.edit-mode .edit-description { display: block; box-sizing: border-box; }

.card.edit-mode .date-due { display: none; }
.card .edit-date-due { display: none; }
.card.edit-mode .edit-date-due { display: block; box-sizing: border-box; }

.card.edit-mode .edit-priority {display: grid;}
.card .edit-priority {display: none;}

.card.edit-mode li label { display: none; }
.card .edit-label { display: none; }
.card.edit-mode .edit-label { display: block; box-sizing: border-box; }
.card input[type="checkbox"]:checked ~ .edit-label {
  text-decoration: line-through rgba(0,0,0,.25);
}

.card.edit-mode .add-task {display: grid;}
.card .add-task {display: none;}

#menu .menu-tasks .edit-project { display: none; }
#menu .menu-tasks.edit-mode .edit-project { display: block; }
#menu .menu-tasks .project-title { display: block; }
#menu .menu-tasks.edit-mode .project-title { display: none; }



/* dragged card */
.card.dragging-card {
  position: absolute;
  background-color: white;
  pointer-events: none;
  border-radius: var(--card-border-rad);
  transition: none;
}
.card.dragging-card .edit-buttons {
  filter: grayscale(100%);
  /* display: none; */
}



/* search results */

.card.search-result {
  grid-template-areas:
    " title   title    title   progress "
    " descr   descr    descr   descr    "
    " created created  created created  "
    " due     due      due     due      ";
  padding-left: 1rem;
  border-radius: 1rem;
  margin-bottom: 1rem;
  cursor: pointer;
  box-shadow: var(--card-shadow);
  transition: background-color 150ms ease-in-out;
}
.card.search-result:hover { background-color: hsl(240, 67%, 98%); }
.card.search-result:active { box-shadow: var(--card-shadow-invert); }


.card.search-result .description { margin: .5rem 0 0 0; }
.card.search-result .date-creation { margin-top: .5rem; }
.card.search-result .date-due { margin: 0; }
.card.search-result .date-due:empty { display: none; }
.card.search-result .title { padding-left: 0; }



/* responsiveness */

@media screen and (min-width: 1000px) {
  body{
    display: grid;
    grid-template-columns: var(--menu-width) 1fr;
    grid-template-areas: "sidebar cards";
  }
  #menu-button,
  #screen-cover-menu {
    display: none !important;
  }
  #menu {
    position: relative;
    display: block;
    grid-area: sidebar;
    top: 0;
    height: 100vh;
    max-height: none;
  }

  #cards-container {
    grid-area: cards;
    width: 100%;
  }

  #menu .fieldset-options .menu-item.about:hover {
    background: url(./media/images/background/github-mark.svg);
    background-size: var(--icon-size);
    animation: bg-anim var(--duration) calc(var(--duration) / 5) infinite linear,
  bg-zoom-out var(--duration) cubic-bezier(.08,.82,.17,1) forwards;
  }
}



/* for general use */

.hidden {
  display: none;
}

.opacity-zero {
  opacity: 0;
}

.margin-top {
  margin-top: var(--card-drag-padding);
}
.margin-bottom {
  margin-bottom: var(--card-drag-padding);
}


/*for testing*/
/* * {
  outline: 1px solid gray;
} */